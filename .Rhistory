# e)
plot(predict.lm(lm.1), residuals.lm(lm.1), main = "Residual Plot")
shiny::runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
directory %>%
n()
directory %>%
nrow()
# total number of stores
totalnum <- directory %>%
nrow()
rank_world %>% nrow()
# number of countries
num_coun <- rank_world %>% nrow()
# HTML scripts
my_str <- paste0("<p>Starbucks is growing strong! As of 2017, it has
<strong>", totalnum, "</strong> recorded
locations worldwide, spreading across <strong>", num_coun,"</strong>
countries. For the sake of tidiness,<br>
the tables shown below are limited to only display the top
ten countries and cities that have the most Starbucks stores
respectively. <em>USA</em> stays on <br>
top of the record for having <strong>13608</strong> stores,
followed by <em>China</em> where it has <strong>2734</strong>
stores across the country. For what's not shown on the table, <br>
<em>Andorra</em> has only <strong>1</strong> Starbucks location
across the country. Another interesting side to look at is
the number of stores each city has. <br>
<em>Shanghai</em> tops the list by having <strong>542</strong>
stores. In the meantime, there are <em>2653 cities</em>
with only <strong>1</strong> Starbucks store.</p>")
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
install.packages("shinywidgets")
install.packages("shinyWidgets")
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
caffeine_data <- drinks %>%
select(Beverage_Category, Beverage, `Caffeine(mg)`)
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
# string for background
background <- "https://linkbookmarking.com/wp-content/
uploads/2018/08/high_quality_wallpaper_HD_1080_IDS_1172781.jpg"
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
shiny::runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
rank_world %>%
top_n(1) %>%
pull(country_name)
# top country
top_country <- rank_world %>%
top_n(1) %>%
pull(country_name)
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
rank_world[rank_world$country_name, 2]
rank_world[2, "country_name"]
rank_world$country_name[2]
# second country
second_country <- rank_world$country_name[2]
res
# function to select the country's number of stores
store_num <- function(attr, cname) {
if (attr == "country") {
res <- rank_world[rank_world$country_name == cname, "totalstores"]
} else {
res <- rank_city[rank_city$City == cname, "totalstores"]
}
res
}
# top country number of stores
num_top_country <- store_num("country", top_country)
num_top_country
# function to select the country's number of stores
store_num <- function(attr, cname) {
if (attr == "country") {
res <- rank_world$totalstores[rank_world$country_name == cname]
} else {
res <- rank_city$totalstores[rank_city$City == cname]
}
res
}
# top country number of stores
num_top_country <- store_num("country", top_country)
num_top_country
# second country number of stores
num_second_country <- store_num("country", second_country)
num_second_country
# HTML scripts
my_str <-
paste0("<p>Starbucks is growing strong! As of 2017, it has <strong>",
totalnum, "</strong> recorded locations worldwide, spreading across
<strong>", num_coun,"</strong>countries. For the sake of tidiness,
<br>
the tables shown below are limited to only display the top ten
countries and cities that have the most Starbucks stores respectively.
<br>
<em>", top_country,"</em> stays on top of the record for having
<strong>", num_top_country, "</strong> stores, followed by <em>",
second_country, "</em> where it has <strong>", num_second_country,
"</strong> stores across the country. For what's not shown on the table, <br>
<em>Andorra</em> has only <strong>1</strong> Starbucks location
across the country. Another interesting side to look at is
the number of stores each city has. <br>
<em>Shanghai</em> tops the list by having <strong>542</strong>
stores. In the meantime, there are <em>2653 cities</em>
with only <strong>1</strong> Starbucks store.</p>")
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
rank_city %>%
group_by(totalstores) %>%
summarise(how_many = n())
rank_city %>%
group_by(totalstores) %>%
summarise(how_many = n()) %>%
top_n(1) %>%
pull(how_many)
# number of cities with just one Starbucks location
num_city_one_store <- rank_city %>%
group_by(totalstores) %>%
summarise(how_many = n()) %>%
top_n(1) %>%
pull(how_many)
rank_world %>%
arrange(totalstores)
rank_world %>%
arrange(totalstores) %>%
top_n(1) %>%
pull(country_name)
rank_world %>%
arrange(totalstores) %>%
top_n(1) %>%
rank_world %>%
arrange(totalstores) %>%
top_n(1)
rank_world %>%
arrange(totalstores)
rank_world %>%
arrange(totalstores) %>%
top_n(1)
rank_world %>%
arrange(totalstores) %>%
top_n(totalstores)
?top_n
rank_world %>%
arrange(totalstores) %>%
row_number(1) %>%
pull(country_name)
?rank
rank_world %>%
arrange(totalstores) %>%
top_n(-1) %>%
pull(country_name)
# country with least Starbucks location
least_country <- rank_world %>%
arrange(totalstores) %>%
top_n(-1) %>%
pull(country_name)
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
num_least_country <- store_num("country", least_country)
num_least_country
total_for_each_num[total_for_each_num$totalstores == "1", "how_many"]
rank_city %>%
top_n(1) %>%
pull(City)
rank_city %>%
top_n(1) %>%
pull(City) %>%
rename("Shanghai")
rank_city %>%
top_n(1) %>%
rename("Shanghai") %>%
pull(City)
rank_city %>%
top_n(1) %>%
rename("Shanghai")
rank_city %>%
top_n(1)
?rename
rank_city %>%
top_n(1) %>%
rename(Shanghai) %>%
pull(City)
rank_city %>%
top_n(1) %>%
rename(Shanghai)
rank_city %>%
top_n(1)
rank_city %>%
top_n(1) %>%
rename(rank_city$City, Shanghai)
rank_city %>%
top_n(1) %>%
rename(rank_city$City, "Shanghai")
rank_city %>%
top_n(1) %>%
rename(rank_city$City, Shanghai = 上海市)
rank_city %>%
top_n(1) %>%
rename(Shanghai = 上海市)
rank_city %>%
top_n(1) %>%
rename(Shanghai = "上海市")
rank_city %>%
top_n(1) %>%
pull(totalstores)
# top city number of stores
num_top_city <- rank_city %>%
top_n(1) %>%
pull(totalstores)
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
rank_city %>%
group_by(totalstores) %>%
summarise(how_many = n()) %>%
top_n(1) %>%
pull(how_many)
total_for_each_num[total_for_each_num$totalstores == "1", "how_many"]
rank_world$country_name[rank_world$country_name == "Australia"]
# Australia
aus <- rank_world$country_name[rank_world$country_name == "Australia"]
aus
# number of stores in Australia
num_aus <- store_num("country", aus)
num_aus
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
# HTML scripts
my_str <-
paste0("<p>
Starbucks is growing strong! As of 2017, it has <strong>",
totalnum, "</strong> recorded locations worldwide, spreading across
<strong>", num_coun, "</strong>countries. For the sake of tidiness,
<br>
the tables shown below are limited to only display the top ten
countries and cities that have the most Starbucks stores respectively.
<br>
<em>", top_country,"</em> stays on top of the record for having
<strong>", num_top_country, "</strong> stores, followed by <em>",
second_country, "</em> where it has <strong>", num_second_country,
"</strong> stores across the country.
<br>
For what's not shown on the table, <em>", least_country, "</em> has
only <strong>", num_least_country, "</strong> Starbucks location across
the country. Another interesting side to look at is the number
<br>
of stores each city has. <em>Shanghai</em> tops the list by having
<strong>", num_top_city, "</strong> stores. In the meantime, there are
<em>", num_city_one_store, "cities</em> with only <strong>1</strong>
Starbucks store.
</p>
<p>Another interesting fact observed from the dataset is that
<em>", aus, "</em> despite spanning 2.97 millions square miles
only has <strong>", num_aus, "</strong> Starbucks's locations,
<br>
which may be worth investigating why Starbucks is not expanding
well in Australia.
</p>")
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
# HTML scripts
my_str <-
paste0("<p>
Starbucks is growing strong! As of 2017, it has <strong>",
totalnum, "</strong> recorded locations worldwide, spreading across
<strong>", num_coun, "</strong>countries. For the sake of tidiness,
<br>
the tables shown below are limited to only display the top ten
countries and cities that have the most Starbucks stores respectively.
<br>
<em>", top_country,"</em> stays on top of the record for having
<strong>", num_top_country, "</strong> stores, followed by <em>",
second_country, "</em> where it has <strong>", num_second_country,
"</strong> stores across the country.
<br>
For what's not shown on the table, <em>", least_country, "</em> has
only <strong>", num_least_country, "</strong> Starbucks location across
the country. Another interesting side to look at is the number
<br>
of stores each city has. <em>Shanghai</em> tops the list by having
<strong>", num_top_city, "</strong> stores. In the meantime, there are
<em>", num_city_one_store, " cities </em> with only <strong>1</strong>
Starbucks store.
</p>
<p>Another interesting fact observed from the dataset is that
<em>", aus, "</em> despite spanning 2.97 millions square miles
only has <strong>", num_aus, "</strong> Starbucks's locations,
<br>
which may be worth investigating why Starbucks is not expanding
well in Australia.
</p>")
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
install.packages(ggthemes)
install.packages("ggthemes")
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
shiny::runApp('Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project')
library(styler)
library(lintr)
lint(prepare_map.R)
setwd("~/Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project")
lint(prepare_map.R)
lint("prepare_map.R")
# HTML scripts
my_str <-
paste0("<div class=board>
<p>
Starbucks is growing strong! As of 2017, it has <strong>",
totalnum, "</strong> recorded locations worldwide, spreading across
<strong>", num_coun, "</strong>countries. For the sake of tidiness,
<br>
the tables shown below are limited to only display the top ten
countries and cities that have the most Starbucks stores respectively.
<br>
<em>", top_country, "</em> stays on top of the record for having
<strong>", num_top_country, "</strong> stores, followed by <em>",
second_country, "</em> where it has <strong>", num_second_country,
"</strong> stores across the country.
<br>
For what's not shown on the table, <em>", least_country, "</em> has
only <strong>", num_least_country, "</strong> Starbucks location across
the country. Another interesting side to look at is the number
<br>
of stores each city has. <em>Shanghai</em> tops the list by having
<strong>", num_top_city, "</strong> stores. In the meantime, there are
<em>", num_city_one_store, " cities </em> with only <strong>1</strong>
Starbucks store.
</p>
<p>Another interesting fact observed from the dataset is that
<em>", aus, "</em> despite spanning 2.97 millions square miles
only has <strong>", num_aus, "</strong> Starbucks's locations,
<br>
which may be worth investigating why Starbucks is not expanding
well in Australia.
</p>
<p>
There are definitely many more things to be explored. Feel free
to play around with the map and discover your own findings!
</p>
</div>")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project")
runApp()
setwd("~/Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#There are 64mg of caffeine in each shot of espresso.
caffeine_data$num_expresso_shot <-  round(as.numeric(caffeine_data$`Caffeine(mg)`) / 64, digits = 2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Projects/School_Work/INFO 201/Homeworks/final-project/Final-Project")
runApp()
runApp()
runApp()
?setBackgroundImage
runApp()
runApp()
runApp()
runApp()
runApp()
pwd
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(styler)
library(lintr)
lint("ui.R")
lint("ui.R")
lint("ui.R")
lint("ui.R")
library(styler)
lint("server.R")
lint("server.R")
lint("server.R")
lint("server.R")
lint("server.R")
styler("server.R")
style_file("server.R")
style_file("ui.R")
style_file("prepare_food_comparison.R")
lint("prepare_food_comparison.R")
intro6 <- "<h4>
You may want not only to drink coffee or something but also
grab some food in Starbucks. However, most people do not know how much a
particular nutrition is included in Starbucks foods
and which food is better or worse compared with another
food in terms of a specific ingredients.
Our comparison tool is for those who want to know that.
Only you have to do is select 2 menus from the list
and check the nutrition you are interested in. When you
have two foods that you want to try and can not make up your mind which to buy,
this comparison tool definitely helps you know which food
you should order for your health.
</h4>"
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
lint("ui.R")
lint("server.R")
