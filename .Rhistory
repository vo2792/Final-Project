)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(
title = paste(
"Amount of Caffeine Measured in Expresso Shots for", input$drink_type
), # plot title
x = input$drink_type, # x-axis label
y = "Amount of Caffeine Measured in Expresso Shots"
)
})
output$table4 <- renderDataTable({
select(caffeine_varies, Beverage_Category, Beverage)
})
output$bar_graph5 <- renderPlot({
ggplot(data = avg_caffeine) +
geom_col(mapping = aes(
x = Beverage_Category, y = avg_expresso_shot,
fill = Beverage_Category
)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(
title = paste(
"Average Amount of Caffeine Measured in Shots for Each Beverage Category"
), # plot title
x = "Beverage Categories", # x-axis label
y = "Amount of Caffeine Measured in Shots " # y-axis label
)
# render the fourth object defined in tab three
## todo:
##output$SOME_NAME_FOUR <-
filtered4 <- reactive({
foods <- foods %>% filter(item == input$food_1 | item == input$food_2)
foods
})
output$food <- renderPlot({
filtered4() %>%
ggplot(aes_string(x = "item", y = input$nutrition)) +
geom_col(fill = "lightblue", width = 0.3) +
theme_bw() +
labs(x = "")
})
output$boxplot <- renderPlot({
plot <- ggplot(drinks) +
geom_boxplot(mapping = aes(x = Beverage_Category,
y = Calories,
fill = Beverage_Category)) +
labs(title = "Trends in Each Drink Category",
x = "Beverage Category", y = input$category) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot
})
})
}
library(dplyr)
food <- read.csv(
con <- file("test3/starbucks-menu/starbucks-menu-nutrition-food.csv",
encoding = "UCS-2LE"))
drinks <- read.csv("data/starbucks_drinkMenu_expanded.csv")
colnames(food) <- c("Food", "Calories", "Fat(g)", "Carbohydrates(g)",
"Dietary Fiber(g)", "Protein(g)")
colnames(drinks) <- c("Beverage_Category", "Beverage", "Beverage_Prep",
"Calories", "Total_Fat(g)", "Trans_Fat(g)",
"Saturated_Fat(g)", "Sodium(mg)", "Total_Carbohydrates(g)",
"Cholesterol(mg)", "Dietary_Fiber(g)", "Sugars(g)",
"Protein(g)", "Vitamin_A(%DV)", "Vitamin_C(%DV)",
"Calcium(%DV)", "Iron(%DV)", "Caffeine(mg)")
items <- as.character(food$Food)
items <- sort(items)
items <- c("All", items)
type <- drinks %>%
group_by(Beverage_Category) %>%
count()
types <- as.character(type$Beverage_Category)
types[10] <- "All"
types <- sort(types)
caffeine_data <- drinks %>%
select(Beverage_Category, Beverage, `Caffeine(mg)`)
#There are 64mg of caffeine in each shot of expresso.
caffeine_data$num_expresso_shot <-  round(as.numeric(caffeine_data$`Caffeine(mg)`) / 64, digits = 2)
caffeine_varies <- filter(caffeine_data, is.na(caffeine_data$num_expresso_shot))
caffeine_data_num <- filter(caffeine_data, !is.na(caffeine_data$num_expresso_shot))
colnames(caffeine_data_num)[colnames(caffeine_data_num) == "Caffeine(mg)"] <- "Caffeine_mg"
beverage_type <- caffeine_data$Beverage_Category
avg_caffeine <- caffeine_data_num %>%
group_by(Beverage_Category) %>%
select(Beverage_Category, Caffeine_mg) %>%
summarise(Avg_Caffeine_mg = round(mean(as.numeric(Caffeine_mg)), digits = 2))
avg_caffeine$avg_expresso_shot <- round(avg_caffeine$Avg_Caffeine_mg / 64, digits = 2)
library(dplyr)
food <- read.csv(
con <- file("test3/starbucks-menu/starbucks-menu-nutrition-food.csv",
encoding = "UCS-2LE"))
drinks <- read.csv("data/starbucks_drinkMenu_expanded.csv")
colnames(food) <- c("Food", "Calories", "Fat(g)", "Carbohydrates(g)",
"Dietary Fiber(g)", "Protein(g)")
colnames(drinks) <- c("Beverage_Category", "Beverage", "Beverage_Prep",
"Calories", "Total_Fat(g)", "Trans_Fat(g)",
"Saturated_Fat(g)", "Sodium(mg)", "Total_Carbohydrates(g)",
"Cholesterol(mg)", "Dietary_Fiber(g)", "Sugars(g)",
"Protein(g)", "Vitamin_A(%DV)", "Vitamin_C(%DV)",
"Calcium(%DV)", "Iron(%DV)", "Caffeine(mg)")
items <- as.character(food$Food)
items <- sort(items)
items <- c("All", items)
type <- drinks %>%
group_by(Beverage_Category) %>%
count()
types <- as.character(type$Beverage_Category)
types[10] <- "All"
types <- sort(types)
caffeine_data <- drinks %>%
select(Beverage_Category, Beverage, `Caffeine(mg)`)
#There are 64mg of caffeine in each shot of expresso.
caffeine_data$num_expresso_shot <-  round(as.numeric(caffeine_data$`Caffeine(mg)`) / 64, digits = 2)
caffeine_varies <- filter(caffeine_data, is.na(caffeine_data$num_expresso_shot))
caffeine_data_num <- filter(caffeine_data, !is.na(caffeine_data$num_expresso_shot))
colnames(caffeine_data_num)[colnames(caffeine_data_num) == "Caffeine(mg)"] <- "Caffeine_mg"
beverage_type <- caffeine_data$Beverage_Category
avg_caffeine <- caffeine_data_num %>%
group_by(Beverage_Category) %>%
select(Beverage_Category, Caffeine_mg) %>%
summarise(Avg_Caffeine_mg = round(mean(as.numeric(Caffeine_mg)), digits = 2))
avg_caffeine$avg_expresso_shot <- round(avg_caffeine$Avg_Caffeine_mg / 64, digits = 2)
library(dplyr)
shiny::runApp('C:/Users/camil/Desktop/info201/final-project')
library(dplyr)
food <- read.csv(
con <- file("test3/starbucks-menu/starbucks-menu-nutrition-food.csv",
encoding = "UCS-2LE"))
drinks <- read.csv("data/starbucks_drinkMenu_expanded.csv")
colnames(food) <- c("Food", "Calories", "Fat(g)", "Carbohydrates(g)",
"Dietary Fiber(g)", "Protein(g)")
colnames(drinks) <- c("Beverage_Category", "Beverage", "Beverage_Prep",
"Calories", "Total_Fat(g)", "Trans_Fat(g)",
"Saturated_Fat(g)", "Sodium(mg)", "Total_Carbohydrates(g)",
"Cholesterol(mg)", "Dietary_Fiber(g)", "Sugars(g)",
"Protein(g)", "Vitamin_A(%DV)", "Vitamin_C(%DV)",
"Calcium(%DV)", "Iron(%DV)", "Caffeine(mg)")
items <- as.character(food$Food)
items <- sort(items)
items <- c("All", items)
type <- drinks %>%
group_by(Beverage_Category) %>%
count()
types <- as.character(type$Beverage_Category)
types[10] <- "All"
types <- sort(types)
caffeine_data <- drinks %>%
select(Beverage_Category, Beverage, `Caffeine(mg)`)
#There are 64mg of caffeine in each shot of expresso.
caffeine_data$num_expresso_shot <-  round(as.numeric(caffeine_data$`Caffeine(mg)`) / 64, digits = 2)
caffeine_varies <- filter(caffeine_data, is.na(caffeine_data$num_expresso_shot))
caffeine_data_num <- filter(caffeine_data, !is.na(caffeine_data$num_expresso_shot))
colnames(caffeine_data_num)[colnames(caffeine_data_num) == "Caffeine(mg)"] <- "Caffeine_mg"
beverage_type <- caffeine_data$Beverage_Category
avg_caffeine <- caffeine_data_num %>%
group_by(Beverage_Category) %>%
select(Beverage_Category, Caffeine_mg) %>%
summarise(Avg_Caffeine_mg = round(mean(as.numeric(Caffeine_mg)), digits = 2))
avg_caffeine$avg_expresso_shot <- round(avg_caffeine$Avg_Caffeine_mg / 64, digits = 2)
setwd("C:/Users/camil/Desktop/info201/final-project")
library(dplyr)
food <- read.csv(
con <- file("test3/starbucks-menu/starbucks-menu-nutrition-food.csv",
encoding = "UCS-2LE"))
drinks <- read.csv("data/starbucks_drinkMenu_expanded.csv")
colnames(food) <- c("Food", "Calories", "Fat(g)", "Carbohydrates(g)",
"Dietary Fiber(g)", "Protein(g)")
colnames(drinks) <- c("Beverage_Category", "Beverage", "Beverage_Prep",
"Calories", "Total_Fat(g)", "Trans_Fat(g)",
"Saturated_Fat(g)", "Sodium(mg)", "Total_Carbohydrates(g)",
"Cholesterol(mg)", "Dietary_Fiber(g)", "Sugars(g)",
"Protein(g)", "Vitamin_A(%DV)", "Vitamin_C(%DV)",
"Calcium(%DV)", "Iron(%DV)", "Caffeine(mg)")
items <- as.character(food$Food)
items <- sort(items)
items <- c("All", items)
type <- drinks %>%
group_by(Beverage_Category) %>%
count()
types <- as.character(type$Beverage_Category)
types[10] <- "All"
types <- sort(types)
caffeine_data <- drinks %>%
select(Beverage_Category, Beverage, `Caffeine(mg)`)
#There are 64mg of caffeine in each shot of expresso.
caffeine_data$num_expresso_shot <-  round(as.numeric(caffeine_data$`Caffeine(mg)`) / 64, digits = 2)
caffeine_varies <- filter(caffeine_data, is.na(caffeine_data$num_expresso_shot))
caffeine_data_num <- filter(caffeine_data, !is.na(caffeine_data$num_expresso_shot))
colnames(caffeine_data_num)[colnames(caffeine_data_num) == "Caffeine(mg)"] <- "Caffeine_mg"
beverage_type <- caffeine_data$Beverage_Category
avg_caffeine <- caffeine_data_num %>%
group_by(Beverage_Category) %>%
select(Beverage_Category, Caffeine_mg) %>%
summarise(Avg_Caffeine_mg = round(mean(as.numeric(Caffeine_mg)), digits = 2))
avg_caffeine$avg_expresso_shot <- round(avg_caffeine$Avg_Caffeine_mg / 64, digits = 2)
runApp('C:/Users/camil/Desktop/info201/Final-Project')
View(caffeine_varies)
library(dplyr)
food <- read.csv(
con <- file("test3/starbucks-menu/starbucks-menu-nutrition-food.csv",
encoding = "UCS-2LE"))
drinks <- read.csv("data/starbucks_drinkMenu_expanded.csv")
colnames(food) <- c("Food", "Calories", "Fat(g)", "Carbohydrates(g)",
"Dietary Fiber(g)", "Protein(g)")
colnames(drinks) <- c("Beverage_Category", "Beverage", "Beverage_Prep",
"Calories", "Total_Fat(g)", "Trans_Fat(g)",
"Saturated_Fat(g)", "Sodium(mg)", "Total_Carbohydrates(g)",
"Cholesterol(mg)", "Dietary_Fiber(g)", "Sugars(g)",
"Protein(g)", "Vitamin_A(%DV)", "Vitamin_C(%DV)",
"Calcium(%DV)", "Iron(%DV)", "Caffeine(mg)")
items <- as.character(food$Food)
items <- sort(items)
items <- c("All", items)
type <- drinks %>%
group_by(Beverage_Category) %>%
count()
types <- as.character(type$Beverage_Category)
types[10] <- "All"
types <- sort(types)
caffeine_data <- drinks %>%
select(Beverage_Category, Beverage, `Caffeine(mg)`)
#There are 64mg of caffeine in each shot of expresso.
caffeine_data$num_expresso_shot <-  round(as.numeric(caffeine_data$`Caffeine(mg)`) / 64, digits = 2)
caffeine_varies <- filter(caffeine_data, is.na(caffeine_data$num_expresso_shot))
caffeine_data_num <- filter(caffeine_data, !is.na(caffeine_data$num_expresso_shot))
colnames(caffeine_data_num)[colnames(caffeine_data_num) == "Caffeine(mg)"] <- "Caffeine_mg"
beverage_type <- caffeine_data$Beverage_Category
avg_caffeine <- caffeine_data_num %>%
group_by(Beverage_Category) %>%
select(Beverage_Category, Caffeine_mg) %>%
summarise(Avg_Caffeine_mg = round(mean(as.numeric(Caffeine_mg)), digits = 2))
avg_caffeine$avg_expresso_shot <- round(avg_caffeine$Avg_Caffeine_mg / 64, digits = 2)
caffeine_varies <- filter(caffeine_data, is.na(caffeine_data$num_expresso_shot))
caffeine_data$num_expresso_shot <-  round(as.numeric(caffeine_data$`Caffeine(mg)`) / 64, digits = 2)
View(caffeine_data_num)
caffeine_data <- drinks %>%
select(Beverage_Category, Beverage, `Caffeine(mg)`)
View(caffeine_data)
View(caffeine_data)
caffeine_data$num_expresso_shot <-  round(as.numeric(caffeine_data$`Caffeine(mg)`) / 64, digits = 2)
View(caffeine_data)
View(caffeine_data)
runApp()
runApp()
View(caffeine_data)
View(caffeine_data)
library(dplyr)
food <- read.csv(
con <- file("test3/starbucks-menu/starbucks-menu-nutrition-food.csv",
encoding = "UCS-2LE"))
drinks <- read.csv("data/starbucks_drinkMenu_expanded.csv")
colnames(food) <- c("Food", "Calories", "Fat(g)", "Carbohydrates(g)",
"Dietary Fiber(g)", "Protein(g)")
colnames(drinks) <- c("Beverage_Category", "Beverage", "Beverage_Prep",
"Calories", "Total_Fat(g)", "Trans_Fat(g)",
"Saturated_Fat(g)", "Sodium(mg)", "Total_Carbohydrates(g)",
"Cholesterol(mg)", "Dietary_Fiber(g)", "Sugars(g)",
"Protein(g)", "Vitamin_A(%DV)", "Vitamin_C(%DV)",
"Calcium(%DV)", "Iron(%DV)", "Caffeine(mg)")
items <- as.character(food$Food)
items <- sort(items)
items <- c("All", items)
type <- drinks %>%
group_by(Beverage_Category) %>%
count()
types <- as.character(type$Beverage_Category)
types[10] <- "All"
types <- sort(types)
caffeine_data <- drinks %>%
select(Beverage_Category, Beverage, `Caffeine(mg)`)
#There are 64mg of caffeine in each shot of expresso.
View(caffeine_data)
View(caffeine_data)
caffeine_data$num_expresso_shot <-  round(as.numeric(caffeine_data$`Caffeine(mg)`) / 64, digits = 2)
View(caffeine_data)
View(caffeine_data)
library(dplyr)
food <- read.csv(
con <- file("test3/starbucks-menu/starbucks-menu-nutrition-food.csv",
encoding = "UCS-2LE"))
drinks <- read.csv("data/starbucks_drinkMenu_expanded.csv")
colnames(food) <- c("Food", "Calories", "Fat(g)", "Carbohydrates(g)",
"Dietary Fiber(g)", "Protein(g)")
colnames(drinks) <- c("Beverage_Category", "Beverage", "Beverage_Prep",
"Calories", "Total_Fat(g)", "Trans_Fat(g)",
"Saturated_Fat(g)", "Sodium(mg)", "Total_Carbohydrates(g)",
"Cholesterol(mg)", "Dietary_Fiber(g)", "Sugars(g)",
"Protein(g)", "Vitamin_A(%DV)", "Vitamin_C(%DV)",
"Calcium(%DV)", "Iron(%DV)", "Caffeine(mg)")
items <- as.character(food$Food)
items <- sort(items)
items <- c("All", items)
type <- drinks %>%
group_by(Beverage_Category) %>%
count()
types <- as.character(type$Beverage_Category)
types[10] <- "All"
types <- sort(types)
caffeine_data <- drinks %>%
select(Beverage_Category, Beverage, `Caffeine(mg)`)
#There are 64mg of caffeine in each shot of expresso.
caffeine_data$num_expresso_shot <-  as.numeric(caffeine_data$`Caffeine(mg)`) / 64
caffeine_varies <- filter(caffeine_data, is.na(caffeine_data$num_expresso_shot))
caffeine_data_num <- filter(caffeine_data, !is.na(caffeine_data$num_expresso_shot))
colnames(caffeine_data_num)[colnames(caffeine_data_num) == "Caffeine(mg)"] <- "Caffeine_mg"
beverage_type <- caffeine_data$Beverage_Category
avg_caffeine <- caffeine_data_num %>%
group_by(Beverage_Category) %>%
select(Beverage_Category, Caffeine_mg) %>%
summarise(Avg_Caffeine_mg = round(mean(as.numeric(Caffeine_mg)), digits = 2))
avg_caffeine$avg_expresso_shot <- round(avg_caffeine$Avg_Caffeine_mg / 64, digits = 2)
library(dplyr)
food <- read.csv(
con <- file("test3/starbucks-menu/starbucks-menu-nutrition-food.csv",
encoding = "UCS-2LE"))
drinks <- read.csv("data/starbucks_drinkMenu_expanded.csv")
colnames(food) <- c("Food", "Calories", "Fat(g)", "Carbohydrates(g)",
"Dietary Fiber(g)", "Protein(g)")
colnames(drinks) <- c("Beverage_Category", "Beverage", "Beverage_Prep",
"Calories", "Total_Fat(g)", "Trans_Fat(g)",
"Saturated_Fat(g)", "Sodium(mg)", "Total_Carbohydrates(g)",
"Cholesterol(mg)", "Dietary_Fiber(g)", "Sugars(g)",
"Protein(g)", "Vitamin_A(%DV)", "Vitamin_C(%DV)",
"Calcium(%DV)", "Iron(%DV)", "Caffeine(mg)")
items <- as.character(food$Food)
items <- sort(items)
items <- c("All", items)
type <- drinks %>%
group_by(Beverage_Category) %>%
count()
types <- as.character(type$Beverage_Category)
types[10] <- "All"
types <- sort(types)
caffeine_data <- drinks %>%
select(Beverage_Category, Beverage, `Caffeine(mg)`)
#There are 64mg of caffeine in each shot of expresso.
caffeine_data$num_expresso_shot <-  round(as.numeric(caffeine_data$`Caffeine(mg)`) / 64, digits = 2)
caffeine_varies <- filter(caffeine_data, is.na(caffeine_data$num_expresso_shot))
caffeine_data_num <- filter(caffeine_data, !is.na(caffeine_data$num_expresso_shot))
colnames(caffeine_data_num)[colnames(caffeine_data_num) == "Caffeine(mg)"] <- "Caffeine_mg"
beverage_type <- caffeine_data$Beverage_Category
avg_caffeine <- caffeine_data_num %>%
group_by(Beverage_Category) %>%
select(Beverage_Category, Caffeine_mg) %>%
summarise(Avg_Caffeine_mg = round(mean(as.numeric(Caffeine_mg)), digits = 2))
avg_caffeine$avg_expresso_shot <- round(avg_caffeine$Avg_Caffeine_mg / 64, digits = 2)
View(caffeine_data)
View(caffeine_data)
library(dplyr)
food <- read.csv(
con <- file("test3/starbucks-menu/starbucks-menu-nutrition-food.csv",
encoding = "UCS-2LE"))
drinks <- read.csv("data/starbucks_drinkMenu_expanded.csv")
colnames(food) <- c("Food", "Calories", "Fat(g)", "Carbohydrates(g)",
"Dietary Fiber(g)", "Protein(g)")
colnames(drinks) <- c("Beverage_Category", "Beverage", "Beverage_Prep",
"Calories", "Total_Fat(g)", "Trans_Fat(g)",
"Saturated_Fat(g)", "Sodium(mg)", "Total_Carbohydrates(g)",
"Cholesterol(mg)", "Dietary_Fiber(g)", "Sugars(g)",
"Protein(g)", "Vitamin_A(%DV)", "Vitamin_C(%DV)",
"Calcium(%DV)", "Iron(%DV)", "Caffeine(mg)")
items <- as.character(food$Food)
items <- sort(items)
items <- c("All", items)
type <- drinks %>%
group_by(Beverage_Category) %>%
count()
types <- as.character(type$Beverage_Category)
types[10] <- "All"
types <- sort(types)
caffeine_data <- drinks %>%
select(Beverage_Category, Beverage, `Caffeine(mg)`)
#There are 64mg of caffeine in each shot of expresso.
caffeine_data$num_expresso_shot <-  round(caffeine_data$`Caffeine(mg)` / 64, digits = 2)
caffeine_varies <- filter(caffeine_data, is.na(caffeine_data$num_expresso_shot))
caffeine_data_num <- filter(caffeine_data, !is.na(caffeine_data$num_expresso_shot))
colnames(caffeine_data_num)[colnames(caffeine_data_num) == "Caffeine(mg)"] <- "Caffeine_mg"
beverage_type <- caffeine_data$Beverage_Category
avg_caffeine <- caffeine_data_num %>%
group_by(Beverage_Category) %>%
select(Beverage_Category, Caffeine_mg) %>%
summarise(Avg_Caffeine_mg = round(mean(as.numeric(Caffeine_mg)), digits = 2))
avg_caffeine$avg_expresso_shot <- round(avg_caffeine$Avg_Caffeine_mg / 64, digits = 2)
View(caffeine_data_num)
View(caffeine_data_num)
View(caffeine_data)
View(caffeine_data)
library(dplyr)
food <- read.csv(
con <- file("test3/starbucks-menu/starbucks-menu-nutrition-food.csv",
encoding = "UCS-2LE"))
drinks <- read.csv("data/starbucks_drinkMenu_expanded.csv")
colnames(food) <- c("Food", "Calories", "Fat(g)", "Carbohydrates(g)",
"Dietary Fiber(g)", "Protein(g)")
colnames(drinks) <- c("Beverage_Category", "Beverage", "Beverage_Prep",
"Calories", "Total_Fat(g)", "Trans_Fat(g)",
"Saturated_Fat(g)", "Sodium(mg)", "Total_Carbohydrates(g)",
"Cholesterol(mg)", "Dietary_Fiber(g)", "Sugars(g)",
"Protein(g)", "Vitamin_A(%DV)", "Vitamin_C(%DV)",
"Calcium(%DV)", "Iron(%DV)", "Caffeine(mg)")
items <- as.character(food$Food)
items <- sort(items)
items <- c("All", items)
type <- drinks %>%
group_by(Beverage_Category) %>%
count()
types <- as.character(type$Beverage_Category)
types[10] <- "All"
types <- sort(types)
caffeine_data <- drinks %>%
select(Beverage_Category, Beverage, `Caffeine(mg)`)
#There are 64mg of caffeine in each shot of expresso.
#caffeine_data$num_expresso_shot <-  round(as.numeric(caffeine_data$`Caffeine(mg)`) / 64, digits = 2)
#caffeine_varies <- filter(caffeine_data, is.na(caffeine_data$num_expresso_shot))
caffeine_data_num <- filter(caffeine_data, is.numeric(caffeine_data$`Caffeine(mg)`))
colnames(caffeine_data_num)[colnames(caffeine_data_num) == "Caffeine(mg)"] <- "Caffeine_mg"
beverage_type <- caffeine_data$Beverage_Category
avg_caffeine <- caffeine_data_num %>%
group_by(Beverage_Category) %>%
select(Beverage_Category, Caffeine_mg) %>%
summarise(Avg_Caffeine_mg = round(mean(as.numeric(Caffeine_mg)), digits = 2))
avg_caffeine$avg_expresso_shot <- round(avg_caffeine$Avg_Caffeine_mg / 64, digits = 2)
caffeine_data$num_expresso_shot <-  round(as.numeric(caffeine_data$`Caffeine(mg)`) / 64, digits = 2)
View(caffeine_data)
View(caffeine_data)
caffeine_data$num_expresso_shot <-  as.numeric(caffeine_data$`Caffeine(mg)`) / 64
library(dplyr)
food <- read.csv(
con <- file("test3/starbucks-menu/starbucks-menu-nutrition-food.csv",
encoding = "UCS-2LE"))
drinks <- read.csv("data/starbucks_drinkMenu_expanded.csv")
colnames(food) <- c("Food", "Calories", "Fat(g)", "Carbohydrates(g)",
"Dietary Fiber(g)", "Protein(g)")
colnames(drinks) <- c("Beverage_Category", "Beverage", "Beverage_Prep",
"Calories", "Total_Fat(g)", "Trans_Fat(g)",
"Saturated_Fat(g)", "Sodium(mg)", "Total_Carbohydrates(g)",
"Cholesterol(mg)", "Dietary_Fiber(g)", "Sugars(g)",
"Protein(g)", "Vitamin_A(%DV)", "Vitamin_C(%DV)",
"Calcium(%DV)", "Iron(%DV)", "Caffeine(mg)")
items <- as.character(food$Food)
items <- sort(items)
items <- c("All", items)
type <- drinks %>%
group_by(Beverage_Category) %>%
count()
types <- as.character(type$Beverage_Category)
types[10] <- "All"
types <- sort(types)
caffeine_data <- drinks %>%
select(Beverage_Category, Beverage, `Caffeine(mg)`)
#There are 64mg of caffeine in each shot of expresso.
caffeine_data$num_expresso_shot <-  as.numeric(caffeine_data$`Caffeine(mg)`) / 64
caffeine_varies <- filter(caffeine_data, is.na(caffeine_data$num_expresso_shot))
caffeine_data_num <- filter(caffeine_data, !is.na(caffeine_data$num_expresso_shot))
colnames(caffeine_data_num)[colnames(caffeine_data_num) == "Caffeine(mg)"] <- "Caffeine_mg"
beverage_type <- caffeine_data$Beverage_Category
avg_caffeine <- caffeine_data_num %>%
group_by(Beverage_Category) %>%
select(Beverage_Category, Caffeine_mg) %>%
summarise(Avg_Caffeine_mg = round(mean(as.numeric(Caffeine_mg)), digits = 2))
avg_caffeine$avg_expresso_shot <- round(avg_caffeine$Avg_Caffeine_mg / 64, digits = 2)
View(caffeine_data)
View(caffeine_data)
food <- read.csv(
con <- file("test3/starbucks-menu/starbucks-menu-nutrition-food.csv",
encoding = "UCS-2LE"), stringsAsFactors = FALSE)
library(dplyr)
food <- read.csv(
con <- file("test3/starbucks-menu/starbucks-menu-nutrition-food.csv",
encoding = "UCS-2LE"), stringsAsFactors = FALSE)
drinks <- read.csv("data/starbucks_drinkMenu_expanded.csv", stringsAsFactors = FALSE)
colnames(food) <- c("Food", "Calories", "Fat(g)", "Carbohydrates(g)",
"Dietary Fiber(g)", "Protein(g)")
colnames(drinks) <- c("Beverage_Category", "Beverage", "Beverage_Prep",
"Calories", "Total_Fat(g)", "Trans_Fat(g)",
"Saturated_Fat(g)", "Sodium(mg)", "Total_Carbohydrates(g)",
"Cholesterol(mg)", "Dietary_Fiber(g)", "Sugars(g)",
"Protein(g)", "Vitamin_A(%DV)", "Vitamin_C(%DV)",
"Calcium(%DV)", "Iron(%DV)", "Caffeine(mg)")
items <- as.character(food$Food)
items <- sort(items)
items <- c("All", items)
type <- drinks %>%
group_by(Beverage_Category) %>%
count()
types <- as.character(type$Beverage_Category)
types[10] <- "All"
types <- sort(types)
caffeine_data <- drinks %>%
select(Beverage_Category, Beverage, `Caffeine(mg)`)
#There are 64mg of caffeine in each shot of expresso.
caffeine_data$num_expresso_shot <-  round(as.numeric(caffeine_data$`Caffeine(mg)`) / 64, digits = 2)
caffeine_varies <- filter(caffeine_data, is.na(caffeine_data$num_expresso_shot))
caffeine_data_num <- filter(caffeine_data, !is.na(caffeine_data$num_expresso_shot))
colnames(caffeine_data_num)[colnames(caffeine_data_num) == "Caffeine(mg)"] <- "Caffeine_mg"
beverage_type <- caffeine_data$Beverage_Category
avg_caffeine <- caffeine_data_num %>%
group_by(Beverage_Category) %>%
select(Beverage_Category, Caffeine_mg) %>%
summarise(Avg_Caffeine_mg = round(mean(as.numeric(Caffeine_mg)), digits = 2))
avg_caffeine$avg_expresso_shot <- round(avg_caffeine$Avg_Caffeine_mg / 64, digits = 2)
View(caffeine_varies)
View(caffeine_varies)
View(caffeine_data)
View(caffeine_data)
runApp()
library(lintr)
library(styler)
runApp('C:/Users/camil/Desktop/info201/Final-Project')
install.packages("shinyWidgets")
runApp('C:/Users/camil/Desktop/info201/Final-Project')
